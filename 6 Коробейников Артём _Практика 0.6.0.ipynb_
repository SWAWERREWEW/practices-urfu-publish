{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1bbYGdWi_dKiB0HoLFBXxshe_0yemJtea","timestamp":1729677006804}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Коробейников Артём Юрьевич\n","\n","---\n","\n"],"metadata":{"id":"tKNG_RzWxG6g"}},{"cell_type":"markdown","source":["# **Дисклеймер**\n","\n","В данной практике будет введен дополнительный критерий: чистота и читаемость кода, а также соблюдение правил описанных в начале практики"],"metadata":{"id":"cFcrKfclKWh0"}},{"cell_type":"markdown","source":["\n","\n","---\n","\n"],"metadata":{"id":"0SnE87X1xDlV"}},{"cell_type":"markdown","source":["# Задание 1\n","\n","**Задача:**\n","\n","Напишите функцию очищающий список от дубликтов\n","\n","\n","*Запрещено:*\n","\n","*   Использовать set() или готовые функции очищающие список от дубликатов\n","\n","Вввод:\n","\n","```\n","apple banana apple 1 3 4 4 5\n","```\n","\n","\n","Вывод:\n","\n","```\n","apple banana 1 3 4 5\n","```\n","\n"],"metadata":{"id":"VxawR9NubT_F"}},{"cell_type":"code","source":["inital_str = input(\"Напишите функцию очищающий список от дубликтов:\")\n","inital_list = inital_str.split()\n","unic_list = []\n","for i in inital_list:\n","    if not(i in unic_list):\n","        unic_list.append(i)\n","unic_str = \"\"\n","for j in unic_list:\n","    if j != unic_list[-1]:\n","        unic_str += j + \" \"\n","    else:\n","        unic_str += j\n","print(unic_str)\n","# ✔"],"metadata":{"id":"ml5gnbPXbeju","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729677465704,"user_tz":-300,"elapsed":5998,"user":{"displayName":"Артём Коробейников","userId":"11566160400159462171"}},"outputId":"5e50ad42-3061-4992-d4f6-83ccbf6448a5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Напишите функцию очищающий список от дубликтовapple banana apple 1 3 4 4 5\n","apple banana 1 3 4 5\n"]}]},{"cell_type":"markdown","source":["\n","# Задание 2\n","\n","**Задача:**\n","\n","Написать функцию для нахождения простых чисел в диапазоне\n","\n","Ввод:\n","\n","```\n","10, 50\n","```\n","\n","Вывод:\n","\n","```\n","11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47\n","```"],"metadata":{"id":"y05x0eD0cVCC"}},{"cell_type":"code","source":["def check_prime_number(n):\n","    dels = []\n","    verdict = True\n","    for w in range(1, n+1):\n","        # цикл от 1 до самого числа включительно\n","        if n % w == 0 and len(dels) < 3:\n","        # если само число делится без остатка\n","        # то добавляем в список делителей\n","        # делителей у простого числа два.\n","            dels.append(w)\n","    if len(dels) > 2:\n","        verdict = False\n","    return verdict\n","\n","\n","inital_str = input(\"Написать функцию для нахождения простых чисел в диапазоне:\")\n","inital_list = inital_str.split(\", \")\n","answer_str = \"\"\n","for m in range(int(inital_list[0]), int(inital_list[1])+1):\n","    if check_prime_number(m):\n","        answer_str += str(m) + \" \"\n","print(answer_str)\n","# ✔"],"metadata":{"id":"XSMJnLgrc6Bf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729678452863,"user_tz":-300,"elapsed":4404,"user":{"displayName":"Артём Коробейников","userId":"11566160400159462171"}},"outputId":"e0d02b69-a007-43bb-eb95-8a708c5b04ed"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Написать функцию для нахождения простых чисел в диапазоне:10, 50\n","11 13 17 19 23 29 31 37 41 43 47 \n"]}]},{"cell_type":"markdown","source":["# Задание 3\n","\n","Напишите функцию для объединения двух списков (список ключей и список значении) в словарь\n","\n","*Запрещено:*\n","\n","*   Использования готовых функции для объединения списков (пример: zip() )\n","\n","Дано:\n","\n","```\n","keys = ['a', 'b', 'c', 'e' ]\n","values = [1, 2, 3, 4]\n","```\n","\n","Вывод:\n","```\n","{'a': 1, 'b': 2, 'c': 3, 'e': 4}\n","```\n","\n","\n"],"metadata":{"id":"vYM0LyxxdElN"}},{"cell_type":"code","source":["def union_lists(k, v):\n","    dictionary = {}\n","    for i in range(len(k)):\n","        key = k[i]\n","        val = v[i]\n","        dictionary[key] = val\n","    return dictionary\n","\n","keys = ['a', 'b', 'c', 'e' ]\n","values = [1, 2, 3, 4]\n","print(union_lists(keys, values))\n","# ✔"],"metadata":{"id":"CRvhHTjCdvjS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729678950212,"user_tz":-300,"elapsed":327,"user":{"displayName":"Артём Коробейников","userId":"11566160400159462171"}},"outputId":"f1015f7a-227a-4620-ed91-35b22bef9ce5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'a': 1, 'b': 2, 'c': 3, 'e': 4}\n"]}]},{"cell_type":"markdown","source":["# Задание 4\n","\n","Напишите функцию(ии) для подсчета статистических параметров:\n","*   Сумму\n","*   Среднее арифметическое\n","*   Медиану\n","*   Моду\n","\n","\n","*Запрещено:*\n","\n","*   sum()\n","*   sorted()\n","*   и других функции предоставляющих готовое решение задания\n","\n","Дано:\n","\n","```\n","numbers = [1, 2, 2, 3, 4, 5, 6, 7, 8 ,9 ,10]\n","\n","```\n","\n","Вывод:\n","```\n","{'mean': 5.181818181818182, 'median': 5, 'mode': 2, 'sum': 57}\n","```\n"],"metadata":{"id":"L_w8H8i-fQcP"}},{"cell_type":"code","source":["def functions(initil_list):\n","    d = {}\n","    def function_sum(listn): # ✔\n","        summ = 0\n","        for i in listn:\n","            summ += int(i)\n","        return summ\n","\n","\n","    def arithmetic_mean(listn): # ✔\n","        len = 0\n","        for l in listn:\n","            len += 1\n","        answer = 0\n","        answer = function_sum(listn)/len\n","        return answer\n","\n","\n","    def median(listn): # ✔\n","        answer = None\n","        len = 0\n","        for l in listn:\n","            len += 1\n","        if len % 2 != 0:\n","            index = len//2-1\n","            answer = listn[index+1]\n","        else:\n","            index1 = len//2\n","            index2 = len//2-1\n","            answer = (listn[index1] + listn[index2])/2\n","        return answer\n","\n","\n","    def mode(alist): # ✔\n","        len = 0\n","        for l in alist:\n","            len += 1\n","        \"\"\"Создаём список чисел и список количеств.\n","        Второй список длинной с первоначальный, но все ячейки это единицы,\n","        В ячейках с повторяющимися числами будут посчитано количество\n","        повторений\"\"\"\n","        numbers = []\n","        counts = [1]*len\n","\n","        for i in range(len):\n","            \"\"\"Находим индекс числа, которое повторилось, используя список уникальных\n","            значений. В списке количеств по этому индексу мы увеличиваем число\n","            на единицу.\"\"\"\n","            if not(alist[i] in numbers):\n","                numbers.append(alist[i])\n","            elif alist[i] in numbers:\n","                counts[i] += 1\n","        max_count = 0\n","        \"Максимальное число из списка количеств\"\n","        len_counts = 0\n","        \"Просто длина списка количеств\"\n","        for lc in counts:\n","            len_counts += 1\n","        for i in range(len_counts):\n","            if counts[i] > max_count:\n","                max_count = counts[i]\n","        return max_count\n","\n","\n","    d['mean'] = arithmetic_mean(initil_list)\n","    d['median'] = median(initil_list)\n","    d['mode'] = mode(initil_list)\n","    d['sum'] = function_sum(initil_list)\n","    return d\n","\n","\n","numbers = [1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n","print(functions(numbers))\n","# ✔ {'mean': 5.181818181818182, 'median': 5, 'mode': 2, 'sum': 57}"],"metadata":{"id":"dW6jW_rjfuba","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729703707629,"user_tz":-300,"elapsed":502,"user":{"displayName":"Артём Коробейников","userId":"11566160400159462171"}},"outputId":"02768768-d606-460f-d6dc-d4000f9b64f2"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["{'mean': 5.181818181818182, 'median': 5, 'mode': 2, 'sum': 57}\n"]}]},{"cell_type":"markdown","source":["# Задание 5\n","\n","На ввод поступает строка символов. Строка состоит из слов, которые отделены друг от друга пробелами. Необходимо вывести самое длинное слово и его порядковый номер.\n","\n","*Запрещено:*\n","\n","*   len()\n","\n","Дано:\n","\n","```\n","Страдание и боль всегда обязательны для широкого сознания и глубокого сердца.\n","\n","```\n","\n","Вывод:\n","```\n","Самое длинное слово с номером 5: обязательны\n","```"],"metadata":{"id":"hZW0NZ7SgTcp"}},{"cell_type":"code","source":["message = \"Необходимо вывести самое длинное слово и его порядковый номер:\" # ✔\n","inital_str = input(message)\n","\n","inital_list = inital_str.split()\n","max_len = 0\n","max_word = \"\"\n","index_max_word = 0\n","len_inital_list = 0\n","for ll in inital_list:\n","    len_inital_list += 1\n","\n","for i in range(len_inital_list):\n","    len = 0\n","    for l in inital_list[i]:\n","        len += 1\n","    if len > max_len:\n","        max_len = len\n","        max_word = inital_list[i]\n","        index_max_word = i+1\n","\n","answer = \"Самое длинное слово с номером {n}: {w}\".format(n=index_max_word,\n","w=max_word)\n","print(answer)\n","# ✔"],"metadata":{"id":"rC5DpHHLsDYp","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729682366257,"user_tz":-300,"elapsed":2186,"user":{"displayName":"Артём Коробейников","userId":"11566160400159462171"}},"outputId":"d31871ae-86df-4f3a-9a55-fd0cdf7735a1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Необходимо вывести самое длинное слово и его порядковый номер:Страдание и боль всегда обязательны для широкого сознания и глубокого сердца.\n","Самое длинное слово с номером 5: обязательны\n"]}]},{"cell_type":"markdown","source":["# Задание 6\n","\n","Напишите программу, для управления оценками студентов, со следующими функциями:\n","\n","* Добавление информации о студенте и его оценках.\n","* Подсчет среднего балла студента.\n","* Получение списка всех студентов с их средними баллами.\n","* Поиск студента по имени и вывод его оценок и среднего балла.\n","\n","\n","\n"],"metadata":{"id":"k5BzJW5ZeaQN"}},{"cell_type":"code","source":["names_str = input(\"Напишите ФИО студентов и их оценки через запятую\")\n","names = names_str.split(\", \")"],"metadata":{"id":"cvhlltVbdyoL"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Задание 7\n","\n","\n","**Задача:**\n","\n","Создайте приложение-викторину с командной строкой, которое задает пользователям вопросы по различным темам и отслеживает их результаты.\n","\n","Ключевые особенности:\n","\n","*   Хранение данных о вопросах и ответах на них, а также баллов за каждый вопрос\n","*   Реализуйте функцию для представления вопросов, принятия ответов пользователей и предоставления обратной связи о том, являются ли ответы правильными или неправильными.\n","*  После завершения викторины отобразите общий балл пользователя из числа ответов на вопросы.\n","*  Реализуйте функцию добавления нового вопроса\n","*  Реализуйте функцию перемешивания вопросов, для отображения случайного вопроса\n"],"metadata":{"id":"iQ8Z-7PYgu1_"}},{"cell_type":"code","source":[],"metadata":{"id":"DhxyYwHwh2V4"},"execution_count":null,"outputs":[]}]}